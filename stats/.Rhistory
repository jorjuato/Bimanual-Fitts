fname=varnames[1]
fname
varpath=paste(list(out_path,fname),sep="/")
varpath=paste(list(out_path,fname),sep="/")
varpath
paste(list(out_path,fname),sep="/")
paste(list(out_path,fname),sep="/")
varpath=paste(out_path,fname,sep="/")
varpath
sink(paste(varpath,'anova.out',sep="/"))
source("anal3.R")
source("anal3.R")
source("anal3.R")
?dir.create
source("anal3.R")
source("anal3.R")
?sink
close
close
?sink
close()
?close
q()
q()
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
mdata$Rf==0
q()
mdata$Rf==0
ez.mod<-ezANOVA(data=mdata,dv=rho,wid=.(pp), within=.(S,IDR,IDL),between=.(grp),type=3)
require(ez)
ez.mod<-ezANOVA(data=mdata,dv=rho,wid=.(pp), within=.(S,IDR,IDL),between=.(grp),type=3)
attach(data)
attach(mdata)
ez.mod<-ezANOVA(data=mdata,dv=rho,wid=.(pp), within=.(S,IDR,IDL),between=.(grp),type=3)
ez.mod<-ezANOVA(data=mdata,dv=.(rho),wid=.(pp), within=.(S,IDR,IDL),between=.(grp),type=3)
ez.mod
ez.mod<-ezPlot(data=mdata,dv=.(rho),wid=.(pp), within=.(S,IDR,IDL),between=.(grp),type=3)
ez.mod<-ezStats(data=mdata,dv=.(rho),wid=.(pp), within=.(S,IDR,IDL),between=.(grp),type=3)
ez.mod<-ezPlot(data=mdata,dv=.(rho),wid=.(pp), within=.(S,IDR,IDL),between=.(grp),type=3)
ez.mod<-ezANOVA(data=mdata,dv=.(rho),wid=.(pp), within=.(S,IDR,IDL),between=.(grp),type=3)
ez.stats<-ezStats(data=mdata,dv=.(rho),wid=.(pp), within=.(S,IDR,IDL),between=.(grp),type=3)
ez.stats
ezPlot?
?ezPlot
ez.plt<-ezPlot(data=mdata,dv=.(rho),wid=.(pp), x=.(grp),within=.(S,IDR,IDL),between=.(grp),type=3)
print(ez.plt)
ezANOVA
source("anal3.R")
source("anal3.R")
source("anal3.R")
vname="rho"
lmer.mod <- lmer(get(vname) ~ (1|pp) + grp*S*IDR*IDL, data=mdata)
glht(lmer.mod,linfct=mcp(grp = "Tukey"))
kkk<-glht(lmer.mod,linfct=mcp(grp = "Tukey"))
print(kkk)
summary(kkk)
glht(lmer.mod,linfct=mcp(pp = "Tukey"))
lmer.mod
print(lmer.mod)
summary(lmer.mod)
q()
summary(lmer.mod)
print(lmer.mod)
kkk<-glht(lmer.mod,linfct=mcp(grp = "Tukey"))
require(lme4)
kkk<-glht(lmer.mod,linfct=mcp(grp = "Tukey"))
require(multcomp)
kkk<-glht(lmer.mod,linfct=mcp(grp = "Tukey"))
summary(kkk)
kkk<-glht(lmer.mod,linfct=mcp(pp = "Tukey"))
kkk<-glht(lmer.mod,linfct=mcp(S = "Tukey"))
print(kkk)
summary(kkk)
kkk<-glht(lmer.mod,linfct=mcp(IDR = "Tukey"))
summary(kkk)
kkk<-glht(lmer.mod,linfct=mcp(IDL = "Tukey"))
summary(kkk)
kkk<-glht(lmer.mod,linfct=mcp(IDR = "Tukey"))
summary(kkk)
kkk<-glht(lmer.mod,linfct=mcp(grp = "Tukey"))
summary(kkk)
kkk
ez.mod
summary(ez.mod)
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
traceback()
traceback()
traceback()
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
mdata
q()
source("anal3.R")
source("anal3.R")
mdata
q
mdata$S==1 && mdata$grp=="U"
mdata$S==1 & mdata$grp=="U"
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
histogram?
?histogram
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
q()
source("main.R")
require(HH)
library("HH") 
install.packages('HH')
q()
#Analysis of Variance for Bimanual Fitts experiment
source("plot_fcns_bi.R")
source("stat_fcns_bi.R")
source("plot_fcns_uni.R")
source("stat_fcns_uni.R")
# coding scheme for categorical variables matters
# run with dummy coding -> factory default in R, wrong results
options(contrasts=c(unordered="contr.treatment", ordered="contr.poly"))
# effect coding for unordered factors (sum to zero, correct results)
#options(contrasts=c(unordered="contr.sum",       ordered="contr.poly"))
#Prepare global paths
uLfile="./UniL_fitts.dat"
uRfile="./UniR_fitts.dat"
bfile="./Bi_fitts.dat"
opath="./anal"
#Select analysis to perform
do_aov=FALSE
do_lme=FALSE
do_lmer=FALSE
do_ANOVA=TRUE
do_CompareANOVA=TRUE
do_barchart=TRUE
do_interaction=TRUE
do_boxplots=TRUE
do_density=TRUE
#Globally define format of data files FIXXX
#Load data from csv file
bcolfmt=c("factor","factor","factor","factor","factor",rep("numeric",33),recursive=TRUE)
ucolfmt=c("factor","factor","factor","factor"         ,rep("numeric",13),recursive=TRUE)
bidata<-read.csv(bfile,colClasses=bcolfmt)
uLdata<-read.csv(uLfile,colClasses=ucolfmt)
uRdata<-read.csv(uRfile,colClasses=ucolfmt)
levels(bidata$grp)=c('C','U')
levels(bidata$IDR)=c('D','M','E')
levels(bidata$IDL)=c('D','E')
levels(uLdata$grp)=c('C','U')
levels(uRdata$grp)=c('C','U')
levels(uLdata$ID)=c('D','E')
levels(uRdata$ID)=c('D','M','E')
bidata<-generate.relative.vars(bidata,uLdata,uRdata)
bidata
names(bidata)
densityplots=names(bidata)[6:64] #It will plot density plots for all variables
densityplots
ran=[6:64]
ran=(6:64)
ran
names(uLdata)
names(uRdata)
names(uRdata)[5:17]
rr=(5:17)
names(uRdata)[rr]
uRdata
names(uRdata)
names(uRdata)[rr]
rangeB<-(6:64)
rangeU<-(5:17)
densityplots=names(bidata)[rangeB] #It will plot density plots for all variables
#Iterate over all Bimanual variables
for (vname in names(bidata)[rangeB]) {
    #Create path
    vpath=paste(opath,vname,sep="/")
    dir.create(vpath,showWarnings=FALSE)
    
    if (do_aov) do.aov(bidata,vname,vpath)
    
    if (do_lme) do.lme(bidata,vname,vpath)
    
    if (do_ANOVA) do.ANOVA(bidata,vname,vpath)
    
    if (do_CompareANOVA) do.Compare.ANOVA(bidata,vname,vpath)
    
    if (do_lmer) do.lmer(bidata,vname,vpath)
    if (do_barchart) plot_barcharts(bidata,vname,vpath)
    
    if (do_interaction) plot_interactions(bidata,vname,vpath)
    
    if (do_boxplots) plot_boxplots(bidata,vname,vpath)
    
    if (do_density && vname %in% densityplots) plot_densityplot(bidata,vname,vpath)
}
rangeB<-(6:64)
rangeU<-(5:17)
densityplots=names(bidata)[rangeB] #It will plot density plots for all variables
#Iterate over all Bimanual variables
for (vname in names(bidata)[rangeB]) {
    #Create path
    vpath=paste(opath,vname,sep="/")
    dir.create(vpath,showWarnings=FALSE)
    
    if (do_aov) do.aov(bidata,vname,vpath)
    
    if (do_lme) do.lme(bidata,vname,vpath)
    
    if (do_ANOVA) do.ANOVA(bidata,vname,vpath)
    
    if (do_CompareANOVA) do.Compare.ANOVA(bidata,vname,vpath)
    
    if (do_lmer) do.lmer(bidata,vname,vpath)
    if (do_barchart) plot_barcharts(bidata,vname,vpath)
    
    if (do_interaction) plot_interactions(bidata,vname,vpath)
    
    if (do_boxplots) plot_boxplots(bidata,vname,vpath)
    
    if (do_density && vname %in% densityplots) plot_densityplot(bidata,vname,vpath)
}
#Analysis of Variance for Bimanual Fitts experiment
source("plot_fcns_bi.R")
source("stat_fcns_bi.R")
source("plot_fcns_uni.R")
source("stat_fcns_uni.R")
# coding scheme for categorical variables matters
# run with dummy coding -> factory default in R, wrong results
options(contrasts=c(unordered="contr.treatment", ordered="contr.poly"))
# effect coding for unordered factors (sum to zero, correct results)
#options(contrasts=c(unordered="contr.sum",       ordered="contr.poly"))
#Prepare global paths
uLfile="./UniL_fitts.dat"
uRfile="./UniR_fitts.dat"
bfile="./Bi_fitts.dat"
opath="./anal"
#Select analysis to perform
do_aov=TRUE
do_lme=TRUE
do_lmer=TRUE
do_ANOVA=TRUE
do_CompareANOVA=TRUE
do_barchart=TRUE
do_interaction=TRUE
do_boxplots=TRUE
do_density=TRUE
#Globally define format of data files FIXXX
#Load data from csv file
bcolfmt=c("factor","factor","factor","factor","factor",rep("numeric",33),recursive=TRUE)
ucolfmt=c("factor","factor","factor","factor"         ,rep("numeric",13),recursive=TRUE)
bidata<-read.csv(bfile,colClasses=bcolfmt)
uLdata<-read.csv(uLfile,colClasses=ucolfmt)
uRdata<-read.csv(uRfile,colClasses=ucolfmt)
levels(bidata$grp)=c('C','U')
levels(bidata$IDR)=c('D','M','E')
levels(bidata$IDL)=c('D','E')
levels(uLdata$grp)=c('C','U')
levels(uRdata$grp)=c('C','U')
levels(uLdata$ID)=c('D','E')
levels(uRdata$ID)=c('D','M','E')
bidata<-generate.relative.vars(bidata,uLdata,uRdata)
rangeB<-(6:64)
rangeU<-(5:17)
densityplots=names(bidata)[rangeB] #It will plot density plots for all variables
#Iterate over all Bimanual variables
for (vname in names(bidata)[rangeB]) {
    #Create path
    vpath=paste(opath,vname,sep="/")
    dir.create(vpath,showWarnings=FALSE)
    
    if (do_aov) do.aov(bidata,vname,vpath)
    
    if (do_lme) do.lme(bidata,vname,vpath)
    
    if (do_ANOVA) do.ANOVA(bidata,vname,vpath)
    
    if (do_CompareANOVA) do.compare.ANOVA(bidata,vname,vpath)
    
    if (do_lmer) do.lmer(bidata,vname,vpath)
    if (do_barchart) plot_barcharts(bidata,vname,vpath)
    
    if (do_interaction) plot_interactions(bidata,vname,vpath)
    
    if (do_boxplots) plot_boxplots(bidata,vname,vpath)
    
    if (do_density && vname %in% densityplots) plot_densityplot(bidata,vname,vpath)
}
#Analysis of Variance for Bimanual Fitts experiment
source("plot_fcns_bi.R")
source("stat_fcns_bi.R")
source("plot_fcns_uni.R")
source("stat_fcns_uni.R")
# coding scheme for categorical variables matters
# run with dummy coding -> factory default in R, wrong results
options(contrasts=c(unordered="contr.treatment", ordered="contr.poly"))
# effect coding for unordered factors (sum to zero, correct results)
#options(contrasts=c(unordered="contr.sum",       ordered="contr.poly"))
#Prepare global paths
uLfile="./UniL_fitts.dat"
uRfile="./UniR_fitts.dat"
bfile="./Bi_fitts.dat"
opath="./anal"
#Select analysis to perform
do_aov=TRUE
do_lme=TRUE
do_lmer=TRUE
do_ANOVA=TRUE
do_CompareANOVA=TRUE
do_barchart=TRUE
do_interaction=TRUE
do_boxplots=TRUE
do_density=TRUE
#Globally define format of data files FIXXX
#Load data from csv file
bcolfmt=c("factor","factor","factor","factor","factor",rep("numeric",33),recursive=TRUE)
ucolfmt=c("factor","factor","factor","factor"         ,rep("numeric",13),recursive=TRUE)
bidata<-read.csv(bfile,colClasses=bcolfmt)
uLdata<-read.csv(uLfile,colClasses=ucolfmt)
uRdata<-read.csv(uRfile,colClasses=ucolfmt)
levels(bidata$grp)=c('C','U')
levels(bidata$IDR)=c('D','M','E')
levels(bidata$IDL)=c('D','E')
levels(uLdata$grp)=c('C','U')
levels(uRdata$grp)=c('C','U')
levels(uLdata$ID)=c('D','E')
levels(uRdata$ID)=c('D','M','E')
bidata<-generate.relative.vars(bidata,uLdata,uRdata)
rangeB<-(6:64)
rangeU<-(5:17)
densityplots=names(bidata)[rangeB] #It will plot density plots for all variables
#Iterate over all Bimanual variables
for (vname in names(bidata)[rangeB]) {
    #Create path
    vpath=paste(opath,vname,sep="/")
    dir.create(vpath,showWarnings=FALSE)
    
    if (do_aov) do.aov(bidata,vname,vpath)
    
    if (do_lme) do.lme(bidata,vname,vpath)
    
    if (do_ANOVA) do.ANOVA(bidata,vname,vpath)
    
    if (do_CompareANOVA) do.compare.ANOVA(bidata,vname,vpath)
    
    if (do_lmer) do.lmer(bidata,vname,vpath)
    if (do_barchart) plot_barcharts(bidata,vname,vpath)
    
    if (do_interaction) plot_interactions(bidata,vname,vpath)
    
    if (do_boxplots) plot_boxplots(bidata,vname,vpath)
    
    if (do_density && vname %in% densityplots) plot_densityplot(bidata,vname,vpath)
}
traceback
traceback()
source('main.R')
bidata
q()
bidata
bmtl<-bidata$MTL
length(bmtl)
umtl<-uLdata$UMTL
length(umtl)
bmtl/umtl
bmtl<-bidata$MTL[bidata$IDL=='E']
length(bmtl)
umtl<-uLdata$UMTL[uLdata$PP==1 & uLdata$S==1 uLdata$ID=='E']
umtl<-uLdata$UMTL[uLdata$p==1 & uLdata$S==1 uLdata$ID=='E']
umtl<-uLdata$UMTL[uLdata$pp==1 & uLdata$S==1 uLdata$ID=='E']
umtl<-uLdata$UMTL[uLdata$pp==1 & uLdata$S==1 & uLdata$ID=='E']
umtl
bidata
bidata[1,]
bidata[1,'U']
bidata[1,g='U']
bidata[1,g='U']
bidata[1,grp]
bidata[1,factor(grp)]
bidata[1,'grp']
a<-bidata[1,'grp']
a
type(a)
i
a/2
a<-as.numeric(bidata[1,'grp'])
a
kk<-bidata
kk
kk$kk
kk$kk[1]
kk$kk[1]<-3
kk
kk$kk
kk$kk[1]<-3
kk$kk[1]<-34
kk$kk
kk$kk[1]
kk['kk']
kk['kk'][pp=1]
kk['kk'][pp==1]
kk['kk'][kk$pp==1]
q()
q()
source('main.R')
source('main.R')
source('main.R')
summary(bidata)
bidata$S[i]
bidata$S[12]
bidata$S[[12]]
as.numeric(bidata$S[12])
as.numeric(bidata$S[133])
as.numeric(bidata[133,'S'])
as.numeric(levels(bidata$S)[bidata[133,'S']])
q())
q()
