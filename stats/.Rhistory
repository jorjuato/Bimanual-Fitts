source('anal3.R')
source('anal3.R')
source('anal3.R')
mdata<-read.csv('fitts.dat')
mdata
mdata(names)
names(mdata)
summary(mdata)
head(mdata)
paste("A", 1:6, sep = "")
rep("factor",3)
rep("factor",3)
numerics=as.vector(rep(numeric,36))
numerics=as.vector(rep(numeric,36))
numerics=as.vector(rep("numeric",36))
numeric
numerics
colfmt=c("factor","factor","factor","factor","factor",numerics,recursive=TRUE)
colfmt
colfmt=c("factor","factor","factor","factor","factor",rep("numeric",36),recursive=TRUE)
colfmt
source('anal3.R')
source('anal3.R')
source('anal3.R')
source('anal3.R')
source('anal3.R')
source('anal3.R')
source('anal3.R')
source('anal3.R')
source('anal3.R')
source('anal3.R')
source('anal3.R')
colfmt=c("factor","factor","factor","factor","factor",rep("numeric",31),recursive=TRUE)
colfmt
data_file="./fitts.dat"
out_path="./anal"
varnames<-names(mdata)[6:36] #Sólo variables numéricas??
varnames
names(mdata)
for fname in varnames [
for fname in varnames {
for fname in varnames fname 
for (fname in varnames) fname 
for (fname in varnames) print(fname) 
varnames[1]
fname=varnames[1]
fname
varpath=paste(list(out_path,fname),sep="/")
varpath=paste(list(out_path,fname),sep="/")
varpath
paste(list(out_path,fname),sep="/")
paste(list(out_path,fname),sep="/")
varpath=paste(out_path,fname,sep="/")
varpath
sink(paste(varpath,'anova.out',sep="/"))
source("anal3.R")
source("anal3.R")
source("anal3.R")
?dir.create
source("anal3.R")
source("anal3.R")
?sink
close
close
?sink
close()
?close
q()
q()
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
mdata$Rf==0
q()
mdata$Rf==0
ez.mod<-ezANOVA(data=mdata,dv=rho,wid=.(pp), within=.(S,IDR,IDL),between=.(grp),type=3)
require(ez)
ez.mod<-ezANOVA(data=mdata,dv=rho,wid=.(pp), within=.(S,IDR,IDL),between=.(grp),type=3)
attach(data)
attach(mdata)
ez.mod<-ezANOVA(data=mdata,dv=rho,wid=.(pp), within=.(S,IDR,IDL),between=.(grp),type=3)
ez.mod<-ezANOVA(data=mdata,dv=.(rho),wid=.(pp), within=.(S,IDR,IDL),between=.(grp),type=3)
ez.mod
ez.mod<-ezPlot(data=mdata,dv=.(rho),wid=.(pp), within=.(S,IDR,IDL),between=.(grp),type=3)
ez.mod<-ezStats(data=mdata,dv=.(rho),wid=.(pp), within=.(S,IDR,IDL),between=.(grp),type=3)
ez.mod<-ezPlot(data=mdata,dv=.(rho),wid=.(pp), within=.(S,IDR,IDL),between=.(grp),type=3)
ez.mod<-ezANOVA(data=mdata,dv=.(rho),wid=.(pp), within=.(S,IDR,IDL),between=.(grp),type=3)
ez.stats<-ezStats(data=mdata,dv=.(rho),wid=.(pp), within=.(S,IDR,IDL),between=.(grp),type=3)
ez.stats
ezPlot?
?ezPlot
ez.plt<-ezPlot(data=mdata,dv=.(rho),wid=.(pp), x=.(grp),within=.(S,IDR,IDL),between=.(grp),type=3)
print(ez.plt)
ezANOVA
source("anal3.R")
source("anal3.R")
source("anal3.R")
vname="rho"
lmer.mod <- lmer(get(vname) ~ (1|pp) + grp*S*IDR*IDL, data=mdata)
glht(lmer.mod,linfct=mcp(grp = "Tukey"))
kkk<-glht(lmer.mod,linfct=mcp(grp = "Tukey"))
print(kkk)
summary(kkk)
glht(lmer.mod,linfct=mcp(pp = "Tukey"))
lmer.mod
print(lmer.mod)
summary(lmer.mod)
q()
summary(lmer.mod)
print(lmer.mod)
kkk<-glht(lmer.mod,linfct=mcp(grp = "Tukey"))
require(lme4)
kkk<-glht(lmer.mod,linfct=mcp(grp = "Tukey"))
require(multcomp)
kkk<-glht(lmer.mod,linfct=mcp(grp = "Tukey"))
summary(kkk)
kkk<-glht(lmer.mod,linfct=mcp(pp = "Tukey"))
kkk<-glht(lmer.mod,linfct=mcp(S = "Tukey"))
print(kkk)
summary(kkk)
kkk<-glht(lmer.mod,linfct=mcp(IDR = "Tukey"))
summary(kkk)
kkk<-glht(lmer.mod,linfct=mcp(IDL = "Tukey"))
summary(kkk)
kkk<-glht(lmer.mod,linfct=mcp(IDR = "Tukey"))
summary(kkk)
kkk<-glht(lmer.mod,linfct=mcp(grp = "Tukey"))
summary(kkk)
kkk
ez.mod
summary(ez.mod)
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
traceback()
traceback()
traceback()
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
mdata
q()
source("anal3.R")
source("anal3.R")
mdata
q
mdata$S==1 && mdata$grp=="U"
mdata$S==1 & mdata$grp=="U"
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
histogram?
?histogram
source("anal3.R")
source("anal3.R")
source("anal3.R")
source("anal3.R")
q()
source("main.R")
require(HH)
library("HH") 
install.packages('HH')
q()
