function plot_posthoc(mfile,vnamesin,fname,rel,outdir,outfile)
%Plots posthoc analysis for all variables in anova.out file, or only those
%selected in the argument vnames.
%
%   INPUT ARGUMENTS
%       mfile  = mat file with data matrices generated by get_data family of fcns
%       fname  = text file generated by parse_stats.py after reading R out dirs.
%       vnames = cell array with names of selected variables. If empty, plots all.
%       rel    = whether to plot or not relative measures of selected variables
%       outdir = where to store created plots
%
%   OUTPUT ARGUMENTS
%       none
if nargin<6, outfile='kepasacontigo'; end
if nargin<5, outdir='out'; end
if nargin<4, rel=1; end
if nargin<3, fname='/home/jorge/Dropbox/WIP/last/anova.out'; end
if nargin<2, vnamesin={'MTL','MTR','accQL','accQR','IPerfEfR','IPerfEfL',...
                       'HarmonicityL','HarmonicityR','vfCircularityR','vfCircularityL','maxangleL','maxangleR',...
                       'rho','flsPC','phDiffStd','minPeakDelay','DID_rho','DID_flsPC','DID_phDiffStd','DID_minPeakDelay'}; end

%vnamesin={'DID_rho','DID_flsPC','DID_phDiffStd','DID_minPeakDelay'};
global globals_def
if isempty(globals_def)
    define_plot_globals();
end
    
global fid

%Select file for text output, defaults to STDOUT
if ~isempty(outfile)
    fid=fopen(outfile, 'w');
end

%Create out dir if needed
if  ~isempty(outdir) && ~exist(outdir,'dir') 
    mkdir(outdir);
end

%Load data matrices if mfile is a string with the path to the data
if ischar(mfile)
    obj=load(mfile);
else
    obj=mfile;
end

%Get list of variables and interactions.
if iscell(fname)
    flists={fname};
    fvnames=fname;
else
    flists = load_interactions(fname);    
    fvnames = cellfun(@(x) x(1),flists);
end

if isempty(vnamesin)
    %Plot all variables if vnames were not selected by user
    for v=1:length(flists)
        flist=flists{v};
        vname=flist{1};
        fprintf(fid,'Analysis of variable %s\n',vname);
        if length(flist)==1
            continue;
        elseif length(vname)>3 && strcmp(vname(1:3),'Uni')
            continue
        elseif length(vname)>3 && strcmp(vname(end-2:end),'rel')
            vname=vname(1:end-3);
            plot_posthoc_var(vname, obj.dataRel, obj.vnamesB, flist{2:end}, 1, outdir);
        elseif length(vname)>3 && strcmp(vname(1:4),'DID_')
            vname=vname(5:end);
            plot_posthoc_didvar(vname, obj.dataD, obj.vnamesB, flist{2:end}, outdir);            
        else
            plot_posthoc_var(vname, obj.dataB, obj.vnamesB, flist{2:end}, 0, outdir);
        end
    end
else
    %Plot variables selected by user
    for v=1:length(vnamesin)
        vname=vnamesin{v};
        idx=strcmp(vname,fvnames);
		interactions=flists{idx}{2};
        if any(idx)
            fprintf(fid,'Analysis of variable %s\n',vname);
            if length(vname)>3 && strcmp(vname(1:4),'DID_')
                vname=vname(5:end);
                plot_posthoc_didvar(vname, obj.dataD, obj.vnamesB, interactions, outdir);   
            else        
                plot_posthoc_var(vname, obj.dataB, obj.vnamesB, interactions, 0, outdir);
                if rel
                    idx=strcmp([vname,'rel'], fvnames);            
                    if any(idx)
                        fprintf(fid,'Analysis of variable %srel\n',vname);
                        plot_posthoc_var(vname, obj.dataRel, obj.vnamesB,interactions,rel,outdir);
                    end
                end
            end
        else
            disp(['unknown variable ',vname])
        end
    end
fclose(fid);    
end
