classdef Participant
    properties(SetAccess = private)
        name
        sessions = Session.empty(7,0)
    end % properties

    methods
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        %Constructor
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        function obj = Participant(name)
            if ~isa(name,'str')
                name=strcat('subject',num2str(name,'%03d'));
            end
            obj.name=name;
            subject_dir = getSubjectDir(obj.name);
            s = dir2(subject_dir);
            for i=1:length(s)
                obj.sessions(i) = Session(joinpath(subject_dir,s(i).name));
            end
            %obj.size = length(obj.sessions);
        end
        
        function B = subsref(obj,ref)
            % Re-implement dot referencing for methods.
            if strcmp(ref(1).type, '.')
                % User trying to access a method
                % Methods access
                if ismember(ref(1).subs, methods(obj))
                    if length(ref) > 1
                        % Call with args
                        B = obj.(ref(1).subs)(ref(2).subs{:});
                    else
                        % No args
                        B = obj.(ref.subs);
                    end
                    return;
                elseif ismember(ref(1).subs, properties(obj))
                    
                end
                % User trying to access something else.
                error(['Reference to non-existant property or method ''' ref.subs '''']);
            end
            switch ref(1).type
                case '()'
                    B = obj.sessions(ref(1).subs{1});
                    
                case '{}'
                    error('() indexing not supported.');
                otherwise
                    error('Should never happen');
            end
        end
            
            
            
            
            if length(S) > 1
                if strcmp(S(1).type,'()')
                    B = obj.sessions(S(1).subs{1});
                    %tmp = obj.sessions(S(1).subs{1});
                    %B = subsref(tmp,S(2:end));
                else
                    disp('Wrong access method for class Participant')
                    B=empty;
                end
            elseif strcmp(S.type,'()')
                B = obj.sessions(S.subs{1});
            else
                disp('Wrong access method for class Participant')
                B=empty;
            end
        end
        
        function plot(obj,figname)
            if nargin<2, figname=''; end
            
        end % plot
    end % methods
end% classdef
