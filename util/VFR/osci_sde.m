function x=osci_sde(K,Q,N,dt,x0)
%x=ou_sde(K,Q,N,dt,x0);
% compute the time series of an stochastically driven nonlinear oscillator
% input:  - K  drift coefficients
%         - Q  fluctuation strength
%         - N  number of samples
%         - dt time step
%         - x0 initial condition
randn(fix(mod(now,1000000)),1);          % 'randomize' random generator
langevinforce=sqrt(2*Q*dt)*randn(N,1);   % define the Langevin force 
%                                        % (rescaled with sqrt(dt)
x=zeros(N,2); 
x(1,:)=[x0(:)]';                         % initialize the output array
for k=1:N-1                              % Euler-forward integration
   x(k+1,1)=x(k,1)+x(k,2)*dt;
   x(k+1,2)=x(k,2)+ ...
      ( ...
      K(1)+ ...
      K(2)*x(k,1)+ ...
      K(3)*x(k,1).^2+ ...
      K(4)*x(k,1).^3+ ...
      K(5)*x(k,2)+ ...
      K(6)*x(k,1).*x(k,2)+ ...
      K(7)*x(k,1).^2.*x(k,2)+ ...
      K(8)*x(k,2).^2+ ...
      K(9)*x(k,1).*x(k,2).^2+ ...
      K(10)*x(k,2).^3 ...
      )*dt+langevinforce(k);
end
%[1,.1,1,0]
%      (-K(1)*x(k,1)+(K(2)-K(3)*x(k,1).^2-K(4)*x(k,2).^2)*x(k,2))*dt+...
%x=osci_sde([1,1,1,0],0.01,10000,0.01,[2,0]); plot(x(:,1),x(:,2))